[{"/Users/mac/dev/react-projects-learning/main-react-app/src/index.js":"1","/Users/mac/dev/react-projects-learning/main-react-app/src/App.js":"2","/Users/mac/dev/react-projects-learning/7-slides/src/index.js":"3","/Users/mac/dev/react-projects-learning/7-slides/src/App.js":"4","/Users/mac/dev/react-projects-learning/7-slides/src/data.js":"5"},{"size":500,"mtime":1609765648993,"results":"6","hashOfConfig":"7"},{"size":528,"mtime":1609765648982,"results":"8","hashOfConfig":"7"},{"size":427,"mtime":1610029804207,"results":"9","hashOfConfig":"10"},{"size":1697,"mtime":1610135682547,"results":"11","hashOfConfig":"10"},{"size":1319,"mtime":1610134964544,"results":"12","hashOfConfig":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pr6bk4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"vm8wqx",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/dev/react-projects-learning/main-react-app/src/index.js",[],"/Users/mac/dev/react-projects-learning/main-react-app/src/App.js",[],"/Users/mac/dev/react-projects-learning/7-slides/src/index.js",[],["25","26"],"/Users/mac/dev/react-projects-learning/7-slides/src/App.js",["27"],"import React, { useState, useEffect } from 'react';\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\nimport { FaQuoteRight } from 'react-icons/fa';\nimport data from './data';\n\nfunction App() {\n\tconst [people, setPeople] = useState(data);\n\tconst [index, setIndex] = React.useState(0);\n\n\tuseEffect(() => {\n\t\tconst lastIndex = people.length - 1;\n\t\tif (index < 0) {\n\t\t\tsetIndex(lastIndex);\n\t\t}\n\t\tif (index > lastIndex) {\n\t\t\tsetIndex(0);\n\t\t}\n\t}, [index, people]);\n\n\tuseEffect(() => {\n\t\tlet slider = setInterval(() => {\n\t\t\tsetIndex(index + 1);\n\t\t}, 5000);\n\t\treturn () => {\n\t\t\tclearInterval(slider);\n\t\t};\n\t}, [index]);\n\n\treturn (\n\t\t<section className='section'>\n\t\t\t<div className='title'>\n\t\t\t\t<h2>\n\t\t\t\t\t<span>/</span>reviews\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t\t<div className='section-center'>\n\t\t\t\t{people.map((person, personIndex) => {\n\t\t\t\t\tconst { id, image, name, title, quote } = person;\n\n\t\t\t\t\tlet position = 'nextSlide';\n\t\t\t\t\tif (personIndex === index) {\n\t\t\t\t\t\tposition = 'activeSlide';\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tpersonIndex === index - 1 ||\n\t\t\t\t\t\t(index === 0 && personIndex === people.length - 1)\n\t\t\t\t\t) {\n\t\t\t\t\t\tposition = 'lastSlide';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<article className={position} key={id}>\n\t\t\t\t\t\t\t<img src={image} alt={name} className='person-img' />\n\t\t\t\t\t\t\t<h4>{name}</h4>\n\t\t\t\t\t\t\t<p className='title'>{title}</p>\n\t\t\t\t\t\t\t<p className='text'>{quote}</p>\n\t\t\t\t\t\t\t<FaQuoteRight className='icon' />\n\t\t\t\t\t\t</article>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<button className='prev' onClick={() => setIndex(index - 1)}>\n\t\t\t\t\t<FiChevronLeft />\n\t\t\t\t</button>\n\t\t\t\t<button className='next' onClick={() => setIndex(index + 1)}>\n\t\t\t\t\t<FiChevronRight />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\nexport default App;\n","/Users/mac/dev/react-projects-learning/7-slides/src/data.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":7,"column":17,"nodeType":"34","messageId":"35","endLine":7,"endColumn":26},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]